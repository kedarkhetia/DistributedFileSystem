syntax = "proto3";
option java_package = "edu.usfca.cs.dfs.messages";


// Protobuf Wrapper message
message ProtoMessage {
    oneof msg {
        Controller controller = 1;
        Storage storage = 2;
        Client client = 3;
    }
}

enum StorageType {
	PRIMARY = 0;
	REPLICA = 1;
}

enum NodeType {
	CLIENT = 0;
	CONTROLLER = 1;
	STORAGE = 2;
}

// Controller Messages
message Controller {
    oneof msg {
        StorageNode storageNode = 1;
        StorageLocationRequest storageLocationRequest = 2;
        Heartbeat heartbeat = 3;
        StoreProof storeProof = 4;
        StoredLocationRequest storedLocationRequest = 5;
        ControllerEmptyMessage contorllerEmptyMessage = 6;
    }
}

message StoredLocationRequest {
	string filename = 1;
	NodeType nodeType = 3;
}

message StorageNode {
    string host = 1;
    int32 port = 2;
}

message StorageLocationRequest {
    string filename = 1;
    int64 size = 2;
}

message Heartbeat {
	int64 availableSpace = 1;
	int64 processedRequests = 2;
	StorageNode storageNode = 3;
}

message StoreProof {
	string filename = 1;
	StorageNode node = 2;
	StorageType storageType = 3;
}

message ControllerEmptyMessage {
	RequestType requestType = 1;
	enum RequestType {
		ACTIVE_NODES = 0;
		TOTAL_DISKSPACE = 1;
		REQUESTS_SERVED = 2;
	}
}

// Storage Messages
message Storage {
    oneof msg {
        StoreChunk storeChunk = 1;
        StorageNodeResponse storeNodeResponse = 2;
        UploadFile uploadFile = 3;
        StorageFeedback storageFeedback = 4;
        StoredLocationResponse storedLocationResponse = 5;
        DownloadFile downloadFile = 6;
    }
}

message StorageNodeResponse {
    bool flag = 1;
}

message Data {
	bytes data = 1;
	int32 chunks = 2;
}

message StoreChunk {
	string fileName = 1;
	Data data = 3;
	StorageNode primary = 4;
	repeated StorageNode replicas = 5;
	StorageType storageType = 6;
}

message UploadFile {
	string filename = 1;
	StorageNode storageNode = 2;
	StorageType storageType = 3;
	NodeType nodeType = 4;
}

// Client Messages
message Client {
    oneof msg {
        StorageLocationResponse storageLocationResponse = 1;
        StoredLocationResponse storedLocationResponse = 2;
        DownloadFile downloadFile = 3;
        StorageFeedback storageFeedback = 4;
        ActiveNodes activeNodes = 5;
        TotalDiskSpace totalDiskSpace = 6;
        RequestsServed requestServed = 7;
    }
}

message StorageFeedback {
	bool isStored = 1;
	string filename = 2;
}

message DownloadFile {
	bool fileFound = 1;
	StoreChunk storeChunk = 2;
}

message StorageLocationResponse {
    repeated StorageNode locations = 1;
}

message StoredLocationType {
	StorageType storageType = 1;
	StorageNode location = 2;
}

message StoredLocationResponse {
	repeated StoredLocationType storedLocationType = 1;
	string filename = 2;
}

message ActiveNodes {
	repeated StorageNode activeNodes = 1;
}

message TotalDiskSpace {
	int64 diskSpace = 1;
}

message RequestPerNode {
	StorageNode node = 1;
	int64 requests = 2;
}

message RequestsServed {
	repeated RequestPerNode requestsPerNode = 1;
}



